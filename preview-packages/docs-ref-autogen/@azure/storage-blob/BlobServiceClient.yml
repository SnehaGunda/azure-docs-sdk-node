### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.BlobServiceClient'
    name: BlobServiceClient
    fullName: BlobServiceClient
    children:
      - '@azure/storage-blob.BlobServiceClient.constructor_1'
      - '@azure/storage-blob.BlobServiceClient.constructor'
      - '@azure/storage-blob.BlobServiceClient.createContainer'
      - '@azure/storage-blob.BlobServiceClient.deleteContainer'
      - '@azure/storage-blob.BlobServiceClient.fromConnectionString'
      - '@azure/storage-blob.BlobServiceClient.getAccountInfo'
      - '@azure/storage-blob.BlobServiceClient.getContainerClient'
      - '@azure/storage-blob.BlobServiceClient.getProperties'
      - '@azure/storage-blob.BlobServiceClient.getStatistics'
      - '@azure/storage-blob.BlobServiceClient.listContainers'
      - '@azure/storage-blob.BlobServiceClient.setProperties'
      - '@azure/storage-blob.BlobServiceClient.url'
    langs:
      - typeScript
    type: class
    summary: >-
      A BlobServiceClient represents a Client to the Azure Storage Blob service
      allowing you

      to manipulate blob containers.
    extends:
      name: '@azure/storage-blob.StorageClient'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.constructor_1'
    name: 'BlobServiceClient(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of BlobServiceClient.
    syntax:
      content: 'new BlobServiceClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A Client string pointing to Azure Storage blob service, such as
                                "https://myaccount.blob.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.blob.core.windows.net?sasString".
        - id: pipeline
          type:
            - '@azure/storage-blob.Pipeline'
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.constructor'
    name: >-
      BlobServiceClient(string, SharedKeyCredential | AnonymousCredential |
      TokenCredential, NewPipelineOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of BlobServiceClient.
    syntax:
      content: >-
        new BlobServiceClient(url: string, credential?: SharedKeyCredential |
        AnonymousCredential | TokenCredential, options?: NewPipelineOptions)
      parameters:
        - id: url
          type:
            - string
          description: |-
            A Client string pointing to Azure Storage blob service, such as
                                "https://myaccount.blob.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.blob.core.windows.net?sasString".
        - id: credential
          type:
            - >-
              @azure/storage-blob.SharedKeyCredential |
              @azure/storage-blob.AnonymousCredential | TokenCredential
          description: >-
            Such as AnonymousCredential, SharedKeyCredential,
            RawTokenCredential,
                                                             or a TokenCredential from @azure/identity. If not specified,
                                                             AnonymousCredential is used.
          optional: true
        - id: options
          type:
            - '@azure/storage-blob.NewPipelineOptions'
          description: ''
          optional: true
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.createContainer'
    name: 'createContainer(string, ContainerCreateOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a Blob container.
    syntax:
      content: >-
        function createContainer(containerName: string, options?:
        ContainerCreateOptions)
      parameters:
        - id: containerName
          type:
            - string
          description: Name of the container to create.
        - id: options
          type:
            - '@azure/storage-blob.ContainerCreateOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Object>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.deleteContainer'
    name: 'deleteContainer(string, ContainerDeleteMethodOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a Blob container.
    syntax:
      content: >-
        function deleteContainer(containerName: string, options?:
        ContainerDeleteMethodOptions)
      parameters:
        - id: containerName
          type:
            - string
          description: Name of the container to delete.
        - id: options
          type:
            - '@azure/storage-blob.ContainerDeleteMethodOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerDeleteResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.fromConnectionString'
    name: 'fromConnectionString(string, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an instance of BlobServiceClient from connection string.
    syntax:
      content: >-
        static function fromConnectionString(connectionString: string, options?:
        NewPipelineOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: options
          type:
            - '@azure/storage-blob.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/storage-blob.BlobServiceClient'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getAccountInfo'
    name: getAccountInfo(ServiceGetAccountInfoOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Get Account Information operation returns the sku name and account
      kind

      for the specified account.

      The Get Account Information operation is available on service versions
      beginning

      with version 2018-03-28.
    syntax:
      content: 'function getAccountInfo(options?: ServiceGetAccountInfoOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.ServiceGetAccountInfoOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServiceGetAccountInfoResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getContainerClient'
    name: getContainerClient(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a ContainerClient object
    syntax:
      content: 'function getContainerClient(containerName: string)'
      parameters:
        - id: containerName
          type:
            - string
          description: A container name
      return:
        type:
          - '@azure/storage-blob.ContainerClient'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getProperties'
    name: getProperties(ServiceGetPropertiesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the properties of a storage accountâ€™s Blob service, including
      properties

      for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
    syntax:
      content: 'function getProperties(options?: ServiceGetPropertiesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.ServiceGetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServiceGetPropertiesResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getStatistics'
    name: getStatistics(ServiceGetStatisticsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves statistics related to replication for the Blob service. It is
      only

      available on the secondary location endpoint when read-access
      geo-redundant

      replication is enabled for the storage account.
    syntax:
      content: 'function getStatistics(options?: ServiceGetStatisticsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.ServiceGetStatisticsOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServiceGetStatisticsResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.listContainers'
    name: listContainers(ServiceListContainersOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns an async iterable iterator to list all the containers

      under the specified account.

      .byPage() returns an async iterable iterator to list the containers in
      pages.
    syntax:
      content: 'function listContainers(options?: ServiceListContainersOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.ServiceListContainersOptions'
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/storage-blob.ContainerItem,
            Models.ServiceListContainersSegmentResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.setProperties'
    name: 'setProperties(StorageServiceProperties, ServiceSetPropertiesOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets properties for a storage accountâ€™s Blob service endpoint, including
      properties

      for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft
      delete settings.
    syntax:
      content: >-
        function setProperties(properties: StorageServiceProperties, options?:
        ServiceSetPropertiesOptions)
      parameters:
        - id: properties
          type:
            - '@azure/storage-blob.StorageServiceProperties'
          description: ''
        - id: options
          type:
            - '@azure/storage-blob.ServiceSetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServiceSetPropertiesResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: Encoded URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.StorageClient'
    name: StorageClient
    spec.typeScript:
      - name: StorageClient
        fullName: StorageClient
        uid: '@azure/storage-blob.StorageClient'
  - uid: >-
      @azure/storage-blob.SharedKeyCredential |
      @azure/storage-blob.AnonymousCredential | TokenCredential
    name: AnonymousCredential | TokenCredential
    spec.typeScript:
      - name: SharedKeyCredential
        fullName: SharedKeyCredential
        uid: '@azure/storage-blob.SharedKeyCredential'
      - name: ' | '
        fullName: ' | '
      - name: AnonymousCredential
        fullName: AnonymousCredential
        uid: '@azure/storage-blob.AnonymousCredential'
      - name: ' | TokenCredential'
        fullName: ' | TokenCredential'
  - uid: '@azure/storage-blob.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/storage-blob.NewPipelineOptions'
  - uid: '@azure/storage-blob.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-blob.Pipeline'
  - uid: '@azure/storage-blob.ContainerCreateOptions'
    name: ContainerCreateOptions
    spec.typeScript:
      - name: ContainerCreateOptions
        fullName: ContainerCreateOptions
        uid: '@azure/storage-blob.ContainerCreateOptions'
  - uid: '@azure/storage-blob.ContainerDeleteMethodOptions'
    name: ContainerDeleteMethodOptions
    spec.typeScript:
      - name: ContainerDeleteMethodOptions
        fullName: ContainerDeleteMethodOptions
        uid: '@azure/storage-blob.ContainerDeleteMethodOptions'
  - uid: '@azure/storage-blob.ServiceGetAccountInfoOptions'
    name: ServiceGetAccountInfoOptions
    spec.typeScript:
      - name: ServiceGetAccountInfoOptions
        fullName: ServiceGetAccountInfoOptions
        uid: '@azure/storage-blob.ServiceGetAccountInfoOptions'
  - uid: '@azure/storage-blob.ContainerClient'
    name: ContainerClient
    spec.typeScript:
      - name: ContainerClient
        fullName: ContainerClient
        uid: '@azure/storage-blob.ContainerClient'
  - uid: '@azure/storage-blob.ServiceGetPropertiesOptions'
    name: ServiceGetPropertiesOptions
    spec.typeScript:
      - name: ServiceGetPropertiesOptions
        fullName: ServiceGetPropertiesOptions
        uid: '@azure/storage-blob.ServiceGetPropertiesOptions'
  - uid: '@azure/storage-blob.ServiceGetStatisticsOptions'
    name: ServiceGetStatisticsOptions
    spec.typeScript:
      - name: ServiceGetStatisticsOptions
        fullName: ServiceGetStatisticsOptions
        uid: '@azure/storage-blob.ServiceGetStatisticsOptions'
  - uid: '@azure/storage-blob.ServiceListContainersOptions'
    name: ServiceListContainersOptions
    spec.typeScript:
      - name: ServiceListContainersOptions
        fullName: ServiceListContainersOptions
        uid: '@azure/storage-blob.ServiceListContainersOptions'
  - uid: >-
      PagedAsyncIterableIterator<@azure/storage-blob.ContainerItem,
      Models.ServiceListContainersSegmentResponse>
    name: ServiceListContainersSegmentResponse>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: ContainerItem
        fullName: ContainerItem
        uid: '@azure/storage-blob.ContainerItem'
      - name: ', Models.ServiceListContainersSegmentResponse>'
        fullName: ', Models.ServiceListContainersSegmentResponse>'
  - uid: '@azure/storage-blob.StorageServiceProperties'
    name: StorageServiceProperties
    spec.typeScript:
      - name: StorageServiceProperties
        fullName: StorageServiceProperties
        uid: '@azure/storage-blob.StorageServiceProperties'
  - uid: '@azure/storage-blob.ServiceSetPropertiesOptions'
    name: ServiceSetPropertiesOptions
    spec.typeScript:
      - name: ServiceSetPropertiesOptions
        fullName: ServiceSetPropertiesOptions
        uid: '@azure/storage-blob.ServiceSetPropertiesOptions'
  - uid: '@azure/storage-blob.BlobServiceClient'
    name: BlobServiceClient
    spec.typeScript:
      - name: BlobServiceClient
        fullName: BlobServiceClient
        uid: '@azure/storage-blob.BlobServiceClient'
