### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.LeaseClient'
    name: LeaseClient
    fullName: LeaseClient
    children:
      - '@azure/storage-blob.LeaseClient.acquireLease'
      - '@azure/storage-blob.LeaseClient.breakLease'
      - '@azure/storage-blob.LeaseClient.chanageLease'
      - '@azure/storage-blob.LeaseClient.constructor'
      - '@azure/storage-blob.LeaseClient.leaseId'
      - '@azure/storage-blob.LeaseClient.releaseLease'
      - '@azure/storage-blob.LeaseClient.renewLease'
      - '@azure/storage-blob.LeaseClient.url'
    langs:
      - typeScript
    type: class
    summary: A client that manages leases for a ContainerClient or a BlobClient.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.LeaseClient.acquireLease'
    name: 'acquireLease(number, LeaseOperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Establishes and manages a lock on a container for delete operations, or on
      a blob

      for write and delete operations.

      The lock duration can be 15 to 60 seconds, or can be infinite.
    syntax:
      content: 'function acquireLease(duration: number, options?: LeaseOperationOptions)'
      parameters:
        - id: duration
          type:
            - number
          description: 'Must be between 15 to 60 seconds, or infinite (-1)'
        - id: options
          type:
            - '@azure/storage-blob.LeaseOperationOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.LeaseOperationResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.LeaseClient.breakLease'
    name: 'breakLease(number, LeaseOperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      To end the lease but ensure that another client cannot acquire a new lease
      until the current lease period has expired.
    syntax:
      content: >-
        function breakLease(breakPeriod: number, options?:
        LeaseOperationOptions)
      parameters:
        - id: breakPeriod
          type:
            - number
          description: Break period
        - id: options
          type:
            - '@azure/storage-blob.LeaseOperationOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.LeaseOperationResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.LeaseClient.chanageLease'
    name: 'chanageLease(string, LeaseOperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: To change the ID of the lease.
    syntax:
      content: >-
        function chanageLease(proposedLeaseId: string, options?:
        LeaseOperationOptions)
      parameters:
        - id: proposedLeaseId
          type:
            - string
          description: the proposed new lease Id.
        - id: options
          type:
            - '@azure/storage-blob.LeaseOperationOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.LeaseOperationResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.LeaseClient.constructor'
    name: 'LeaseClient(ContainerClient | BlobClient, undefined | string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of LeaseClient.
    syntax:
      content: >-
        new LeaseClient(client: ContainerClient | BlobClient, leaseId?:
        undefined | string)
      parameters:
        - id: client
          type:
            - >-
              @azure/storage-blob.ContainerClient |
              @azure/storage-blob.BlobClient
          description: The client to make the lease operation requests.
        - id: leaseId
          type:
            - undefined | string
          description: Initial proposed lease id.
          optional: true
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.LeaseClient.leaseId'
    name: leaseId
    fullName: leaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the lease Id.
    syntax:
      content: 'leaseId: string'
      return:
        type:
          - string
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.LeaseClient.releaseLease'
    name: releaseLease(LeaseOperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      To free the lease if it is no longer needed so that another client may
      immediately acquire a lease against the container or the blob.
    syntax:
      content: 'function releaseLease(options?: LeaseOperationOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.LeaseOperationOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.LeaseOperationResponse>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.LeaseClient.renewLease'
    name: renewLease(LeaseOperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: To renew the lease.
    syntax:
      content: 'function renewLease(options?: LeaseOperationOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.LeaseOperationOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.Lease>
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.LeaseClient.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the url.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.ContainerClient | @azure/storage-blob.BlobClient'
    name: BlobClient
    spec.typeScript:
      - name: ContainerClient
        fullName: ContainerClient
        uid: '@azure/storage-blob.ContainerClient'
      - name: ' | '
        fullName: ' | '
      - name: BlobClient
        fullName: BlobClient
        uid: '@azure/storage-blob.BlobClient'
  - uid: '@azure/storage-blob.LeaseOperationOptions'
    name: LeaseOperationOptions
    spec.typeScript:
      - name: LeaseOperationOptions
        fullName: LeaseOperationOptions
        uid: '@azure/storage-blob.LeaseOperationOptions'
  - uid: Promise<@azure/storage-blob.LeaseOperationResponse>
    name: LeaseOperationResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LeaseOperationResponse
        fullName: LeaseOperationResponse
        uid: '@azure/storage-blob.LeaseOperationResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/storage-blob.Lease>
    name: Lease>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Lease
        fullName: Lease
        uid: '@azure/storage-blob.Lease'
      - name: '>'
        fullName: '>'
