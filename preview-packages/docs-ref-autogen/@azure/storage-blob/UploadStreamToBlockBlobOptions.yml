### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.UploadStreamToBlockBlobOptions'
    name: UploadStreamToBlockBlobOptions
    fullName: UploadStreamToBlockBlobOptions
    children:
      - '@azure/storage-blob.UploadStreamToBlockBlobOptions.abortSignal'
      - '@azure/storage-blob.UploadStreamToBlockBlobOptions.accessConditions'
      - '@azure/storage-blob.UploadStreamToBlockBlobOptions.blobHTTPHeaders'
      - '@azure/storage-blob.UploadStreamToBlockBlobOptions.metadata'
      - '@azure/storage-blob.UploadStreamToBlockBlobOptions.progress'
    langs:
      - typeScript
    type: interface
    summary: Option interface for uploadStream().
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.UploadStreamToBlockBlobOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.UploadStreamToBlockBlobOptions.accessConditions'
    name: accessConditions
    fullName: accessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Access conditions headers.
    optional: true
    syntax:
      content: 'accessConditions?: BlobAccessConditions'
      return:
        type:
          - '@azure/storage-blob.BlobAccessConditions'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.UploadStreamToBlockBlobOptions.blobHTTPHeaders'
    name: blobHTTPHeaders
    fullName: blobHTTPHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: Blob HTTP Headers.
    optional: true
    syntax:
      content: 'blobHTTPHeaders?: BlobHTTPHeaders'
      return:
        type:
          - '@azure/storage-blob.BlobHTTPHeaders'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.UploadStreamToBlockBlobOptions.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: Metadata of block blob.
    optional: true
    syntax:
      content: 'metadata?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.UploadStreamToBlockBlobOptions.progress'
    name: progress
    fullName: progress
    children: []
    langs:
      - typeScript
    type: property
    summary: Progress updater.
    optional: true
    syntax:
      content: 'progress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.BlobAccessConditions'
    name: BlobAccessConditions
    spec.typeScript:
      - name: BlobAccessConditions
        fullName: BlobAccessConditions
        uid: '@azure/storage-blob.BlobAccessConditions'
  - uid: '@azure/storage-blob.BlobHTTPHeaders'
    name: BlobHTTPHeaders
    spec.typeScript:
      - name: BlobHTTPHeaders
        fullName: BlobHTTPHeaders
        uid: '@azure/storage-blob.BlobHTTPHeaders'
