### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.DownloadFromBlobOptions'
    name: DownloadFromBlobOptions
    fullName: DownloadFromBlobOptions
    children:
      - '@azure/storage-blob.DownloadFromBlobOptions.abortSignal'
      - '@azure/storage-blob.DownloadFromBlobOptions.blobAccessConditions'
      - '@azure/storage-blob.DownloadFromBlobOptions.blockSize'
      - '@azure/storage-blob.DownloadFromBlobOptions.maxRetryRequestsPerBlock'
      - '@azure/storage-blob.DownloadFromBlobOptions.parallelism'
      - '@azure/storage-blob.DownloadFromBlobOptions.progress'
    langs:
      - typeScript
    type: interface
    summary: Option interface for BlobClient.downloadToBuffer().
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.DownloadFromBlobOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.DownloadFromBlobOptions.blobAccessConditions'
    name: blobAccessConditions
    fullName: blobAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Access conditions headers.
    optional: true
    syntax:
      content: 'blobAccessConditions?: BlobAccessConditions'
      return:
        type:
          - '@azure/storage-blob.BlobAccessConditions'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.DownloadFromBlobOptions.blockSize'
    name: blockSize
    fullName: blockSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      blockSize is the data every request trying to download.

      Must be >= 0, if set to 0 or undefined, blockSize will automatically
      calculated according

      to the blob size.
    optional: true
    syntax:
      content: 'blockSize?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.DownloadFromBlobOptions.maxRetryRequestsPerBlock'
    name: maxRetryRequestsPerBlock
    fullName: maxRetryRequestsPerBlock
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Optional. ONLY AVAILABLE IN NODE.JS.

      How many retries will perform when original block download stream
      unexpected ends.

      Above kind of ends will not trigger retry policy defined in a pipeline,

      because they doesn't emit network errors.


      With this option, every additional retry means an additional
      FileClient.download() request will be made

      from the broken point, until the requested block has been successfully
      downloaded or

      maxRetryRequestsPerBlock is reached.


      Default value is 5, please set a larger value when in poor network.
    optional: true
    syntax:
      content: 'maxRetryRequestsPerBlock?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.DownloadFromBlobOptions.parallelism'
    name: parallelism
    fullName: parallelism
    children: []
    langs:
      - typeScript
    type: property
    summary: Concurrency of parallel download.
    optional: true
    syntax:
      content: 'parallelism?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.DownloadFromBlobOptions.progress'
    name: progress
    fullName: progress
    children: []
    langs:
      - typeScript
    type: property
    summary: Progress updater.
    optional: true
    syntax:
      content: 'progress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.BlobAccessConditions'
    name: BlobAccessConditions
    spec.typeScript:
      - name: BlobAccessConditions
        fullName: BlobAccessConditions
        uid: '@azure/storage-blob.BlobAccessConditions'
