### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-queue.MessagesClient'
    name: MessagesClient
    fullName: MessagesClient
    children:
      - '@azure/storage-queue.MessagesClient.clear'
      - '@azure/storage-queue.MessagesClient.dequeue'
      - '@azure/storage-queue.MessagesClient.enqueue'
      - '@azure/storage-queue.MessagesClient.getMessageIdClient'
      - '@azure/storage-queue.MessagesClient.constructor_2'
      - '@azure/storage-queue.MessagesClient.constructor_1'
      - '@azure/storage-queue.MessagesClient.constructor'
      - '@azure/storage-queue.MessagesClient.peek'
      - '@azure/storage-queue.MessagesClient.url'
    langs:
      - typeScript
    type: class
    summary: >-
      A MessagesClient represents a URL to an Azure Storage Queue's messages
      allowing you to manipulate its messages.
    extends:
      name: '@azure/storage-queue.StorageClient'
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesClient.clear'
    name: clear(MessagesClearOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Clear deletes all messages from a queue.
    syntax:
      content: 'function clear(options?: MessagesClearOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.MessagesClearOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MessagesClearResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesClient.dequeue'
    name: dequeue(MessagesDequeueOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Dequeue retrieves one or more messages from the front of the queue.
    syntax:
      content: 'function dequeue(options?: MessagesDequeueOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.MessagesDequeueOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.MessagesDequeueResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesClient.enqueue'
    name: 'enqueue(string, MessagesEnqueueOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Enqueue adds a new message to the back of a queue. The visibility timeout
      specifies how long

      the message should be invisible to Dequeue and Peek operations.

      The message content is up to 64KB in size, and must be in a format that
      can be included in an XML request with UTF-8 encoding.

      To include markup in the message, the contents of the message must either
      be XML-escaped or Base64-encode.
    syntax:
      content: 'function enqueue(messageText: string, options?: MessagesEnqueueOptions)'
      parameters:
        - id: messageText
          type:
            - string
          description: Text of the message to enqueue
        - id: options
          type:
            - '@azure/storage-queue.MessagesEnqueueOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.MessagesEnqueueResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesClient.getMessageIdClient'
    name: getMessageIdClient(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a MessageIdClient object.
    syntax:
      content: 'function getMessageIdClient(messageId: string)'
      parameters:
        - id: messageId
          type:
            - string
          description: Id of a message.
      return:
        type:
          - '@azure/storage-queue.MessageIdClient'
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesClient.constructor_2'
    name: 'MessagesClient(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of MessagesClient.
    syntax:
      content: 'new MessagesClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage queue's messages, such as
                                "https://myaccount.queue.core.windows.net/myqueue/messages". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.queue.core.windows.net/myqueue/messages?sasString".
        - id: pipeline
          type:
            - '@azure/storage-queue.Pipeline'
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesClient.constructor_1'
    name: >-
      MessagesClient(string, SharedKeyCredential | AnonymousCredential |
      TokenCredential, NewPipelineOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of MessagesClient.
    syntax:
      content: >-
        new MessagesClient(url: string, credential?: SharedKeyCredential |
        AnonymousCredential | TokenCredential, options?: NewPipelineOptions)
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage queue's messages, such as
                                "https://myaccount.queue.core.windows.net/myqueue/messages". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.queue.core.windows.net/myqueue/messages?sasString".
        - id: credential
          type:
            - >-
              @azure/storage-queue.SharedKeyCredential |
              @azure/storage-queue.AnonymousCredential | TokenCredential
          description: >-
            Such as AnonymousCredential, SharedKeyCredential,
            RawTokenCredential,
                                                             or a TokenCredential from @azure/identity. If not specified,
                                                             AnonymousCredential is used.
          optional: true
        - id: options
          type:
            - '@azure/storage-queue.NewPipelineOptions'
          description: ''
          optional: true
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesClient.constructor'
    name: 'MessagesClient(string, string, NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of MessagesClient.
    syntax:
      content: >-
        new MessagesClient(connectionString: string, queueName: string,
        options?: NewPipelineOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: queueName
          type:
            - string
          description: Queue name.
        - id: options
          type:
            - '@azure/storage-queue.NewPipelineOptions'
          description: ''
          optional: true
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesClient.peek'
    name: peek(MessagesPeekOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Peek retrieves one or more messages from the front of the queue but does
      not alter the visibility of the message.
    syntax:
      content: 'function peek(options?: MessagesPeekOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.MessagesPeekOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.MessagesPeekResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesClient.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
    package: '@azure/storage-queue'
references:
  - uid: '@azure/storage-queue.StorageClient'
    name: StorageClient
    spec.typeScript:
      - name: StorageClient
        fullName: StorageClient
        uid: '@azure/storage-queue.StorageClient'
  - uid: '@azure/storage-queue.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/storage-queue.NewPipelineOptions'
  - uid: >-
      @azure/storage-queue.SharedKeyCredential |
      @azure/storage-queue.AnonymousCredential | TokenCredential
    name: AnonymousCredential | TokenCredential
    spec.typeScript:
      - name: SharedKeyCredential
        fullName: SharedKeyCredential
        uid: '@azure/storage-queue.SharedKeyCredential'
      - name: ' | '
        fullName: ' | '
      - name: AnonymousCredential
        fullName: AnonymousCredential
        uid: '@azure/storage-queue.AnonymousCredential'
      - name: ' | TokenCredential'
        fullName: ' | TokenCredential'
  - uid: '@azure/storage-queue.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-queue.Pipeline'
  - uid: '@azure/storage-queue.MessagesClearOptions'
    name: MessagesClearOptions
    spec.typeScript:
      - name: MessagesClearOptions
        fullName: MessagesClearOptions
        uid: '@azure/storage-queue.MessagesClearOptions'
  - uid: '@azure/storage-queue.MessagesDequeueOptions'
    name: MessagesDequeueOptions
    spec.typeScript:
      - name: MessagesDequeueOptions
        fullName: MessagesDequeueOptions
        uid: '@azure/storage-queue.MessagesDequeueOptions'
  - uid: Promise<@azure/storage-queue.MessagesDequeueResponse>
    name: MessagesDequeueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: MessagesDequeueResponse
        fullName: MessagesDequeueResponse
        uid: '@azure/storage-queue.MessagesDequeueResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.MessagesEnqueueOptions'
    name: MessagesEnqueueOptions
    spec.typeScript:
      - name: MessagesEnqueueOptions
        fullName: MessagesEnqueueOptions
        uid: '@azure/storage-queue.MessagesEnqueueOptions'
  - uid: Promise<@azure/storage-queue.MessagesEnqueueResponse>
    name: MessagesEnqueueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: MessagesEnqueueResponse
        fullName: MessagesEnqueueResponse
        uid: '@azure/storage-queue.MessagesEnqueueResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.MessageIdClient'
    name: MessageIdClient
    spec.typeScript:
      - name: MessageIdClient
        fullName: MessageIdClient
        uid: '@azure/storage-queue.MessageIdClient'
  - uid: '@azure/storage-queue.MessagesPeekOptions'
    name: MessagesPeekOptions
    spec.typeScript:
      - name: MessagesPeekOptions
        fullName: MessagesPeekOptions
        uid: '@azure/storage-queue.MessagesPeekOptions'
  - uid: Promise<@azure/storage-queue.MessagesPeekResponse>
    name: MessagesPeekResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: MessagesPeekResponse
        fullName: MessagesPeekResponse
        uid: '@azure/storage-queue.MessagesPeekResponse'
      - name: '>'
        fullName: '>'
