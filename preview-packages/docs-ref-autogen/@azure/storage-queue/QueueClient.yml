### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-queue.QueueClient'
    name: QueueClient
    fullName: QueueClient
    children:
      - '@azure/storage-queue.QueueClient.create'
      - '@azure/storage-queue.QueueClient.delete'
      - '@azure/storage-queue.QueueClient.getAccessPolicy'
      - '@azure/storage-queue.QueueClient.getMessagesClient'
      - '@azure/storage-queue.QueueClient.getProperties'
      - '@azure/storage-queue.QueueClient.constructor_2'
      - '@azure/storage-queue.QueueClient.constructor_1'
      - '@azure/storage-queue.QueueClient.constructor'
      - '@azure/storage-queue.QueueClient.setAccessPolicy'
      - '@azure/storage-queue.QueueClient.setMetadata'
      - '@azure/storage-queue.QueueClient.url'
    langs:
      - typeScript
    type: class
    summary: A QueueClient represents a URL to the Azure Storage queue.
    extends:
      name: '@azure/storage-queue.StorageClient'
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.create'
    name: create(QueueCreateOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new queue under the specified account.
    syntax:
      content: 'function create(options?: QueueCreateOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueCreateOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueCreateResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.delete'
    name: delete(QueueDeleteOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified queue permanently.
    syntax:
      content: 'function delete(options?: QueueDeleteOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueDeleteOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueDeleteResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.getAccessPolicy'
    name: getAccessPolicy(QueueGetAccessPolicyOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Gets details about any stored access policies specified on the queue that
      may be used with Shared Access Signatures.

      WARNING: JavaScript Date will potential lost precision when parsing start
      and expiry string.

      For example, new Date("2018-12-31T03:44:23.8827891Z").toISOString() will
      get "2018-12-31T03:44:23.882Z".
    syntax:
      content: 'function getAccessPolicy(options?: QueueGetAccessPolicyOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueGetAccessPolicyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.QueueGetAccessPolicyResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.getMessagesClient'
    name: getMessagesClient()
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a MessagesClient object.
    syntax:
      content: function getMessagesClient()
      parameters: []
      return:
        type:
          - '@azure/storage-queue.MessagesClient'
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.getProperties'
    name: getProperties(QueueGetPropertiesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all user-defined metadata and system properties for the specified
      queue. Metadata is associated with the queue as name-values pairs.
    syntax:
      content: 'function getProperties(options?: QueueGetPropertiesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueGetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueGetPropertiesResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.constructor_2'
    name: 'QueueClient(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of QueueClient.
    syntax:
      content: 'new QueueClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage queue, such as
                                "https://myaccount.queue.core.windows.net/myqueue". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.queue.core.windows.net/myqueue?sasString".
        - id: pipeline
          type:
            - '@azure/storage-queue.Pipeline'
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.constructor_1'
    name: >-
      QueueClient(string, SharedKeyCredential | AnonymousCredential |
      TokenCredential, NewPipelineOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of QueueClient.
    syntax:
      content: >-
        new QueueClient(url: string, credential?: SharedKeyCredential |
        AnonymousCredential | TokenCredential, options?: NewPipelineOptions)
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage queue, such as
                                "https://myaccount.queue.core.windows.net/myqueue". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.queue.core.windows.net/myqueue?sasString".
        - id: credential
          type:
            - >-
              @azure/storage-queue.SharedKeyCredential |
              @azure/storage-queue.AnonymousCredential | TokenCredential
          description: >-
            Such as AnonymousCredential, SharedKeyCredential,
            RawTokenCredential,
                                                             or a TokenCredential from @azure/identity. If not specified,
                                                             AnonymousCredential is used.
          optional: true
        - id: options
          type:
            - '@azure/storage-queue.NewPipelineOptions'
          description: ''
          optional: true
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.constructor'
    name: 'QueueClient(string, string, NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of QueueClient.
    syntax:
      content: >-
        new QueueClient(connectionString: string, queueName: string, options?:
        NewPipelineOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: queueName
          type:
            - string
          description: Queue name.
        - id: options
          type:
            - '@azure/storage-queue.NewPipelineOptions'
          description: ''
          optional: true
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.setAccessPolicy'
    name: 'setAccessPolicy(SignedIdentifier[], QueueSetAccessPolicyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets stored access policies for the queue that may be used with Shared
      Access Signatures.
    syntax:
      content: >-
        function setAccessPolicy(queueAcl?: SignedIdentifier[], options?:
        QueueSetAccessPolicyOptions)
      parameters:
        - id: queueAcl
          type:
            - '@azure/storage-queue.SignedIdentifier[]'
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/storage-queue.QueueSetAccessPolicyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueSetAccessPolicyResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.setMetadata'
    name: 'setMetadata(Metadata, QueueSetMetadataOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets one or more user-defined name-value pairs for the specified queue.

      If no option provided, or no metadata defined in the option parameter, the
      queue

      metadata will be removed.
    syntax:
      content: >-
        function setMetadata(metadata?: Metadata, options?:
        QueueSetMetadataOptions)
      parameters:
        - id: metadata
          type:
            - '@azure/storage-queue.Metadata'
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/storage-queue.QueueSetMetadataOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueSetMetadataResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueClient.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
    package: '@azure/storage-queue'
references:
  - uid: '@azure/storage-queue.StorageClient'
    name: StorageClient
    spec.typeScript:
      - name: StorageClient
        fullName: StorageClient
        uid: '@azure/storage-queue.StorageClient'
  - uid: '@azure/storage-queue.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/storage-queue.NewPipelineOptions'
  - uid: >-
      @azure/storage-queue.SharedKeyCredential |
      @azure/storage-queue.AnonymousCredential | TokenCredential
    name: AnonymousCredential | TokenCredential
    spec.typeScript:
      - name: SharedKeyCredential
        fullName: SharedKeyCredential
        uid: '@azure/storage-queue.SharedKeyCredential'
      - name: ' | '
        fullName: ' | '
      - name: AnonymousCredential
        fullName: AnonymousCredential
        uid: '@azure/storage-queue.AnonymousCredential'
      - name: ' | TokenCredential'
        fullName: ' | TokenCredential'
  - uid: '@azure/storage-queue.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-queue.Pipeline'
  - uid: '@azure/storage-queue.QueueCreateOptions'
    name: QueueCreateOptions
    spec.typeScript:
      - name: QueueCreateOptions
        fullName: QueueCreateOptions
        uid: '@azure/storage-queue.QueueCreateOptions'
  - uid: '@azure/storage-queue.QueueDeleteOptions'
    name: QueueDeleteOptions
    spec.typeScript:
      - name: QueueDeleteOptions
        fullName: QueueDeleteOptions
        uid: '@azure/storage-queue.QueueDeleteOptions'
  - uid: '@azure/storage-queue.QueueGetAccessPolicyOptions'
    name: QueueGetAccessPolicyOptions
    spec.typeScript:
      - name: QueueGetAccessPolicyOptions
        fullName: QueueGetAccessPolicyOptions
        uid: '@azure/storage-queue.QueueGetAccessPolicyOptions'
  - uid: Promise<@azure/storage-queue.QueueGetAccessPolicyResponse>
    name: QueueGetAccessPolicyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueueGetAccessPolicyResponse
        fullName: QueueGetAccessPolicyResponse
        uid: '@azure/storage-queue.QueueGetAccessPolicyResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.MessagesClient'
    name: MessagesClient
    spec.typeScript:
      - name: MessagesClient
        fullName: MessagesClient
        uid: '@azure/storage-queue.MessagesClient'
  - uid: '@azure/storage-queue.QueueGetPropertiesOptions'
    name: QueueGetPropertiesOptions
    spec.typeScript:
      - name: QueueGetPropertiesOptions
        fullName: QueueGetPropertiesOptions
        uid: '@azure/storage-queue.QueueGetPropertiesOptions'
  - uid: '@azure/storage-queue.SignedIdentifier[]'
    name: 'SignedIdentifier[]'
    spec.typeScript:
      - name: SignedIdentifier
        fullName: SignedIdentifier
        uid: '@azure/storage-queue.SignedIdentifier'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/storage-queue.QueueSetAccessPolicyOptions'
    name: QueueSetAccessPolicyOptions
    spec.typeScript:
      - name: QueueSetAccessPolicyOptions
        fullName: QueueSetAccessPolicyOptions
        uid: '@azure/storage-queue.QueueSetAccessPolicyOptions'
  - uid: '@azure/storage-queue.Metadata'
    name: Metadata
    spec.typeScript:
      - name: Metadata
        fullName: Metadata
        uid: '@azure/storage-queue.Metadata'
  - uid: '@azure/storage-queue.QueueSetMetadataOptions'
    name: QueueSetMetadataOptions
    spec.typeScript:
      - name: QueueSetMetadataOptions
        fullName: QueueSetMetadataOptions
        uid: '@azure/storage-queue.QueueSetMetadataOptions'
